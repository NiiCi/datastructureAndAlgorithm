package com.niici.study.algorithm;

/**
 * 八皇后问题
 * 在8*8的国际象棋上摆放八个皇后, 使其不能互相攻击。
 * 即: 任意两个皇后都不能处于同一行、同一列或者同一斜线上, 问有多少种摆法。
 *
 * @author niici
 */
public class EightQueens {

    /**
     * 八皇后问题算法思路分析
     * 1. 第一个皇后先放在第一行第一列。
     * 2. 第二个皇后放在第二行第一列, 判断是否OK, 如果不OK, 继续放在第二列、第三列, 依次把所有列都放完, 找到一个合适的位置。
     * 3. 继续第三个皇后《还是第一列、第二列...知道第八个皇后也能放在一个不冲突的位置, 即找到一个正确解。
     * 4. 当得到一个正确解时, 在栈回退到上一个栈时, 就会开始回溯, 即将第一个皇后, 放到第一列的所有正确解, 全部得到。
     * 5. 将第一个皇后放到第二列, 依次类推, 得到所有的正确解。
     */
    public void solution() {


    }
}
